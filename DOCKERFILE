# We use the iqsharp-base image, as that includes
# the .NET Core SDK, IQ#, and Jupyter Notebook already
# installed for us.
FROM mcr.microsoft.com/quantum/iqsharp-base:0.13.20102604

# Add metadata indicating that this image is used for the katas.
ENV IQSHARP_HOSTING_ENV=KATAS_DOCKERFILE

# Make sure the contents of our repo are in ${HOME}
# Required for mybinder.org
COPY . ${HOME}

# Run some commands as root
USER root
# Install Python dependencies for the Python visualization and tutorial notebooks
RUN chown -R ${USER} ${HOME} && \
    chmod +x ${HOME}/scripts/*.sh

# From now on, just run things as the jovyan user
USER ${USER}

RUN cd ${HOME} && \
# `dotnet restore` for each solution to ensure NuGet cache is fully populated
    for solution in $(find . -type f -name "*.sln"); do dotnet restore "$solution"; done && \
# Pre-exec notebooks to improve first-use start time
# (the katas that are less frequently used on Binder are excluded to improve overall Binder build time)
    ./scripts/prebuild-kata.sh lab1 && \
   
# To improve performance when loading packages at IQ# kernel initialization time,
# we remove all online sources for NuGet such that IQ# Package Loading and NuGet dependency
# resolution won't attempt to resolve package dependencies again (as it was already done
# during the prebuild steps above).
# The downside is that only packages that were already downloaded to .nuget/packages folder
# will be available to get loaded.
# Users that require loading additional packages should use the iqsharp-base image instead.
    rm ${HOME}/NuGet.config && \
    echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>\
          <configuration>\
              <packageSources>\
                   <clear />\
              </packageSources>\
          </configuration>\
    " > ${HOME}/.nuget/NuGet/NuGet.Config

# Set the working directory to $HOME (/home/jovyan/)
WORKDIR ${HOME}

# Set default command when running a Docker container instance
CMD ["jupyter", "notebook", "--port=8888", "--no-browser", "--ip=0.0.0.0"]